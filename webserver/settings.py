"""
Django settings for webserver project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nq3-gm^m&skpbw)u#$w9gi!2zor%3sg9vhz9pr+j2_dfxch1a8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gitc.apps.GitcConfig',
    'api',
    'bmpdata',
    'corsheaders'
]

#跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    '*'
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',    
    'django.middleware.common.CommonMiddleware',
   # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



ROOT_URLCONF = 'webserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webserver.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
'''

DATABASES = {
            'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME':'gitc_20170509',
            'USER': 'gitc_0507',
            'PASSWORD': '1213212321',
            'HOST': '',#默认是本地
            'PORT': '3306',
            'OPTIONS':{'init_command':"SET sql_mode='STRICT_TRANS_TABLES'",
                       'charset':'utf8mb4'
                       }
                        }
            }
'''
# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'status','upload')
#
# MEDIA_URL = '/upload/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'status'),
                    )
STATIC_ROOT = os.path.join(BASE_DIR, "static_all") 
#STATIC_ROOT = "%s/static/" % BASE_DIR  # 静态页


MEDIA_ROOT = os.path.join(BASE_DIR, 'status', 'upload')

LOGIN_URL = '/gitcadmin/login.html'
TOKEN = '92A2B5FB36B9AED454728A62A2077BAF'
#APIURL = 'http://10.18.18.195:8899'
APIURL = 'http://120.92.151.221:8000'
IMG_STATUS = 1 # 上传图片的配置 1为测试环境  0 实际环境

# 数据验证使用配置文件
UPPORT = 8899
UPURL = 'HTTP://10.18.18.112:%s/api/imguplod/uplod.html'
UPKEY = '12345678905524HAHA'

#文件保存配置文件
IMGPATH = '%s/static/%s/'

# 邮件发送配置文件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.ym.163.com"
EMAIL_PORT = 25
EMAIL_HOST_USER = 'gitc1213@hairui.cn'
EMAIL_HOST_PASSWORD = "qwq1231231wq"
EMAIL_USE_SSL = False
EMAIL_USE_TLS = False



# 短信验证码配置
SMS_URL = "http://106.ihuyi.com/webservice/sms.php?method=Submit"
SMS_ID = "cf_qilin"
SMS_KEY = "1231231231231sddfsdas123"

# redis 配置
REDIS_ADDR = "127.0.0.1"
REDIS_PORT = 6379
REDIS_TIME = 180 # 超时时间
REDIS_DB = 9
REDIS_PASW = "redis@123456"
